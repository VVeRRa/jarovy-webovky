$nblocks: 5; // same as in DOM
$h-block: 2.5em; // height of a block
$c: #664422 #846344 #987654; // palette
$t: 16s; // animation duration
// easings.net
$easeInBack: cubic-bezier(.6, -.28, .74, .05);
$easeOutBack: cubic-bezier(.17, .89, .32, 1.28);
$easeInOutBack: cubic-bezier(.68, -.56, .27, 1.56);
$n1: $nblocks - 1;
$m: .5*$n1;
$p: 50%/$nblocks;

@mixin randpos() {
  background-position: random(100)*1% random(100)*1%;
}

#section {
  overflow: hidden;
  margin: 0;
  height: 100vh;
  perspective: 75em;
  perspective-origin:
          50% calc(50% - #{6.5*$h-block});
  background: radial-gradient(#079, #012);
}

#div {
  position: absolute;
  top: 50%; left: 50%;
  transform-style: preserve-3d;
}

.assembly {
  animation: exit $t $easeInOutBack infinite;
}

@keyframes exit {
  0%, 53% { transform: rotateY(-40deg); }
  56%, 65% {
    transform: none;
    animation-timing-function: $easeInBack
  }
  95%, to { transform: scale3d(0, 0, 0); }
}

.block {
  animation: a $t linear infinite;

  @for $i from 0 to $nblocks {
    $y: ($m - $i)*$h-block;
    // front & back face width
    $wf: (5 + 2*($n1 - $i))*$h-block;
    // lateral face width
    $wl: (1 + 2*($n1 - $i))*$h-block;
    $fx: .5em/$wf; // scaling factor

    &:nth-child(#{$i + 1}) {
      margin: $y 0;
      animation-name: enter-#{$i + 1};
    }

    @at-root {
      @keyframes enter-#{$i + 1} {
        0%, #{$i*$p} {
          transform: rotateY(.75turn)
          scale3d(0, 1, 0);
        }
        #{($i + .333)*$p} {
          transform: rotateY(.5turn)
          scale3d($fx, 1, 1);
          animation-timing-function:
                  $easeOutBack;
        }
        #{($i + 1)*$p}, 100% {
          transform: none;
        }
      }
    }

    &:nth-child(#{$i + 1}) &__face {
      filter: brightness(1 + $i*.2);

      &:nth-child(odd) { // front+back+top
        margin-left: -.5*$wf;
        width: $wf;

        &:not(:last-child) {
          color: nth($c, 1);
        }
      }
      &:nth-child(even) { // lateral
        margin-left: -.5*$wl;
        width: $wl;
        color: nth($c, 2);
      }

      @for $j from 0 to 4 {
        &:nth-child(#{$j + 1}) {
          transform: rotateY($j*90deg)
          translateZ(if($j%2 > 0, $wf, $wl)*.5);
          @include randpos();
        }
      }

      &:last-child {
        margin-top: -.5*$wl;
        height: $wl;
        @include randpos();
      }
    }
  }

  &__face {
    margin-top: -.5*$h-block;
    height: $h-block;
    backface-visibility: hidden;
    box-shadow: 0 0 1px #000,
    inset 0 0 1px #000,
    0 0 2px #000,
    inset 0 0 2px #000;
    background: currentColor
    url(http://www.wildtextures.com/wp-content/uploads/2011/10/wildtextures-old-wood-original-file.jpg) 50% /cover;
    background-blend-mode: hard-light;

    &:last-child {
      transform: rotateX(90deg)
      translateZ(.5*$h-block);
      color: nth($c, 3);
    }
  }
}